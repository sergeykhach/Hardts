{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "ProposalAdded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTING_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_func",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_descriptionHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "votingStarts",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingEnds",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_func",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governance.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "voteType",
          "type": "uint8"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x20fd526d5b62cfc645db2de2df42d50c9a95d6a999af6287a7d185ec8fd777f4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1356408",
    "logsBloom": "0x
    "blockHash": "0x7f912001cd87de464f0bee8dea6a5c150b2dd332cf37e78667d7f06a83e52b7e",
    "transactionHash": "0x20fd526d5b62cfc645db2de2df42d50c9a95d6a999af6287a7d185ec8fd777f4",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1356408",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "83d8e99d271dba1f6498bf770fe2c577",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"ProposalAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTING_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_func\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_descriptionHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"votingStarts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEnds\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_func\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Governance.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"voteType\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Governance.sol\":\"Governance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Governance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport './IERC20.sol'; //petqa vor token enq unenum vory priyazka enq anum golosi hamar\\n\\ncontract Governance {\\n    struct ProposalVote { //pahum en qgolosiu ardyunqnery\\n        uint againstVotes; //dem\\n        uint forVotes; //koghm\\n        uint abstainVotes; //dzernpah\\n        mapping(address => bool) hasVoted; //konkret hascen golos arel a te che\\n    }\\n\\n    struct Proposal { // es el erb a sksum erb avartvum avartvac a te che\\n        uint votingStarts;\\n        uint votingEnds;\\n        bool executed;\\n    }\\n//stati vichaknerna\\n    enum ProposalState { Pending, Active, Succeeded, Defeated, Executed } // chi sksvac, sksvac a , hajogha.... Executed-pritvoreno v jizn\\n\\n    mapping(bytes32 => Proposal) public proposals; //Idneri hamarnerov arajarknerov\\n    mapping(bytes32 => ProposalVote) public proposalVotes; //golosneri informacian\\n\\n    IERC20 public token;\\n    uint public constant VOTING_DELAY = 10; //jamanak \\n    uint public constant VOTING_DURATION = 60; //karch a shat ughaki dem-i hamar\\n\\n    event ProposalAdded(bytes32 proposalId);\\n\\n    constructor(IERC20 _token) {\\n        token = _token; //asum enq es token a golos-i hamar\\n    }\\n\\n//arajark nerkayacnelu funkcian golosi hamar\\n    function propose(\\n        address _to, //ur enq ugharkum\\n        uint _value, //poghi chapy\\n        string calldata _func,\\n        bytes calldata _data, //tvyalnery vor uzum enq ugharkel\\n        string calldata _description //arajarki eutyuny\\n    ) external returns(bytes32) {\\n        require(token.balanceOf(msg.sender) > 0, \\\"not enough tokens\\\"); //ov uni kara golos uni\\n\\n        bytes32 proposalId = generateProposalId(// arajarki ID-n vor imananq konkret vior arajarki hamar en qgolos anum\\n            _to, _value, _func, _data, keccak256(bytes(_description))//discr-y hash enq anum\\n        );\\n\\n        require(proposals[proposalId].votingStarts == 0, \\\"proposal already exists\\\"); //nuyn banery petq chi lini\\n\\n        proposals[proposalId] = Proposal({\\n            votingStarts: block.timestamp + VOTING_DELAY,//erba sksum\\n            votingEnds: block.timestamp + VOTING_DELAY + VOTING_DURATION,// erba avartvum\\n            executed: false //avartvel a ? default\\n        });\\n\\n        emit ProposalAdded(proposalId);\\n\\n        return proposalId;\\n    }\\n\\n//asum  inq irakanacra progolosovani haghtac proposaly\\n    function execute(\\n        address _to, //mihat ek nuyn banery\\n        uint _value,\\n        string calldata _func,\\n        bytes calldata _data,\\n        bytes32 _descriptionHash// nkaragrutyan hash\\n    ) external returns(bytes memory) {\\n        bytes32 proposalId = generateProposalId( //asum enq vor irakanum eghela senc proposal u golosa eghel\\n            _to, _value, _func, _data, _descriptionHash\\n        );\\n\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"invalid state\\\");//hajogha eghel\\n\\n        Proposal storage proposal = proposals[proposalId];\\n\\n        proposal.executed = true; \\n\\n        bytes memory data;\\n        if (bytes(_func).length > 0) { //asum enq ete _func ka  uremn\\n            data = abi.encodePacked( // apa ed funkciayi anuny hash enq anum u\\n                bytes4(keccak256(bytes(_func))), _data //vercnum enq arajin 4 byte\\n            );\\n        } else {\\n            data = _data; // hakarak depqum inch ka\\n        }\\n\\n        (bool success, bytes memory resp) = _to.call{value: _value}(data);\\n        require(success, \\\"tx failed\\\"); //ugharkumenq nizko urovni\\n\\n        return resp; \\n    }\\n\\n//inchpes golos anennq\\n    function vote(bytes32 proposalId, uint8 voteType) external {\\n        require(state(proposalId) == ProposalState.Active, \\\"invalid state\\\");//asum enq pti state aktiv lini\\n\\n        uint votingPower = token.balanceOf(msg.sender);// parz realizacia hzorutyan ysk tokenneri qanaki vortev, kara ira mi hasceyic myus gci au amen angam hzor golos ani, dra hamar zep-um jamanaki koncept ka check point\\n\\n        require(votingPower > 0, \\\"not enough tokens\\\");// asum enq gone mi qich token pti unenas \\n\\n        ProposalVote storage proposalVote = proposalVotes[proposalId];//id-ov gtnum  enq proposaly vor vote anenq\\n\\n        require(!proposalVote.hasVoted[msg.sender], \\\"already voted\\\");//asum enq vor mi angam voted ani\\n\\n        if(voteType == 0) { //asum enq ete 0ya urmen dema \\n            proposalVote.againstVotes += votingPower; // u avelacnum enq yst dra\\n        } else if(voteType == 1) {//1 a uremn koghma \\n            proposalVote.forVotes += votingPower;\\n        } else {\\n            proposalVote.abstainVotes += votingPower;\\n        }\\n\\n        proposalVote.hasVoted[msg.sender] = true;//asum enq vor arden golos arel a\\n    }\\n\\n//stugum enq ardyoq golosovaniyan sksel a\\n    function state(bytes32 proposalId) public view returns (ProposalState) {\\n        Proposal storage proposal = proposals[proposalId];\\n        ProposalVote storage proposalVote = proposalVotes[proposalId];\\n//stugum enq ka te che tenc arajark\\n        require(proposal.votingStarts > 0, \\\"proposal doesnt exist\\\");\\n\\n        if (proposal.executed) {\\n            return ProposalState.Executed;\\n        }//arden arvac\\n\\n        if (block.timestamp < proposal.votingStarts) {\\n            return ProposalState.Pending;\\n        }//hly chi skasac\\n\\n        if(block.timestamp >= proposal.votingStarts &&\\n            proposal.votingEnds > block.timestamp) {\\n            return ProposalState.Active;\\n        }//yntacqi mej a\\n\\n        //stegh karanq qvorum i mekhanizm dneinq\\n        if(proposalVote.forVotes > proposalVote.againstVotes) {\\n            return ProposalState.Succeeded;\\n        } else {\\n            return ProposalState.Defeated;\\n        }//prcela kam yndunvela ka voch\\n    }\\n\\n//esi henc konkret arajarki Id-n enq generacnum\\n    function generateProposalId(\\n        address _to,\\n        uint _value,\\n        string calldata _func,\\n        bytes calldata _data,\\n        bytes32 _descriptionHash\\n    ) internal pure returns(bytes32) {\\n        return keccak256(abi.encode(\\n            _to, _value, _func, _data, _descriptionHash\\n        ));\\n    }\\n\\n    receive() external payable {}\\n}\\n\\n\",\"keccak256\":\"0xeb0e8b73f42f46ea01f193f38ea53ae94d893118a22308c63551a613a045f2df\",\"license\":\"MIT\"},\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function name() external view returns(string memory);\\n\\n    function symbol() external view returns(string memory);\\n\\n    function decimals() external pure returns(uint);\\n\\n    function totalSupply() external view returns(uint);\\n\\n    function balanceOf(address account) external view returns(uint);\\n\\n    function transfer(address to, uint amount) external;\\n\\n    function transferFrom(address sender, address recipient, uint amount) external;\\n\\n    function allowance(address owner, address spender) external view returns(uint);\\n\\n    function approve(address spender, uint amount) external;\\n\\n    event Transfer(address indexed from, address indexed to, uint amount);\\n    event Approve(address indexed owner, address indexed to, uint amount);\\n}\\n\",\"keccak256\":\"0xe05776d61e4d065041231b9b0d340582115a34e1861b57e448393be3dae7d3c8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200186f3803806200186f8339818101604052810190620000379190620000fd565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200012f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b18262000084565b9050919050565b6000620000c582620000a4565b9050919050565b620000d781620000b8565b8114620000e357600080fd5b50565b600081519050620000f781620000cc565b92915050565b6000602082840312156200011657620001156200007f565b5b60006200012684828501620000e6565b91505092915050565b611730806200013f6000396000f3fe60806040526004361061008a5760003560e01c8063bb0f4b1511610059578063bb0f4b151461017a578063c9a28cb9146101b7578063d14b85b9146101e0578063d6159fe51461021f578063fc0c546a1461024a57610091565b806332ed5b121461009657806361d585da146100d55780638524c65d14610112578063a438d2081461014f57610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610b94565b610275565b6040516100cc93929190610bf5565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b94565b6102ac565b6040516101099190610ca3565b60405180910390f35b34801561011e57600080fd5b5061013960048036038101906101349190610e03565b6103a8565b6040516101469190610eee565b60405180910390f35b34801561015b57600080fd5b506101646105db565b6040516101719190610f09565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610f24565b6105e0565b6040516101ae9190611070565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d991906110cb565b6107f2565b005b3480156101ec57600080fd5b5061020760048036038101906102029190610b94565b610abd565b6040516102169392919061110b565b60405180910390f35b34801561022b57600080fd5b50610234610ae7565b6040516102419190610f09565b60405180910390f35b34801561025657600080fd5b5061025f610aec565b60405161026c91906111a1565b60405180910390f35b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b600080600080848152602001908152602001600020905060006001600085815260200190815260200160002090506000826000015411610321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031890611219565b60405180910390fd5b8160020160009054906101000a900460ff1615610343576004925050506103a3565b816000015442101561035a576000925050506103a3565b816000015442101580156103715750428260010154115b15610381576001925050506103a3565b80600001548160010154111561039c576002925050506103a3565b6003925050505b919050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104069190611248565b602060405180830381865afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190611278565b11610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e906112f1565b60405180910390fd5b60006104af8a8a8a8a8a8a8a8a6040516104a2929190611350565b6040518091039020610b12565b905060008060008381526020019081526020016000206000015414610509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610500906113b5565b60405180910390fd5b6040518060600160405280600a426105219190611404565b8152602001603c600a426105359190611404565b61053f9190611404565b815260200160001515815250600080838152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055509050507f7b06b8256a1c2af3b6e3708cfedb6e43225986a2f920a401f0b70891c5d502df816040516105c39190610eee565b60405180910390a18091505098975050505050505050565b603c81565b606060006105f389898989898989610b12565b90506002600481111561060957610608610c2c565b5b610612826102ac565b600481111561062457610623610c2c565b5b14610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90611484565b60405180910390fd5b6000806000838152602001908152602001600020905060018160020160006101000a81548160ff021916908315150217905550606060008989905011156106e75788886040516106b5929190611350565b604051809103902087876040516020016106d1939291906114f1565b604051602081830303815290604052905061072f565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090505b6000808c73ffffffffffffffffffffffffffffffffffffffff168c84604051610758919061154c565b60006040518083038185875af1925050503d8060008114610795576040519150601f19603f3d011682016040523d82523d6000602084013e61079a565b606091505b5091509150816107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d6906115af565b60405180910390fd5b8095505050505050979650505050505050565b6001600481111561080657610805610c2c565b5b61080f836102ac565b600481111561082157610820610c2c565b5b14610861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085890611484565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108be9190611248565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190611278565b905060008111610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b906112f1565b60405180910390fd5b60006001600085815260200190815260200160002090508060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e19061161b565b60405180910390fd5b60008360ff1603610a155781816000016000828254610a099190611404565b92505081905550610a5d565b60018360ff1603610a405781816001016000828254610a349190611404565b92505081905550610a5c565b81816002016000828254610a549190611404565b925050819055505b5b60018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b600a81565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600087878787878787604051602001610b319796959493929190611695565b604051602081830303815290604052805190602001209050979650505050505050565b600080fd5b600080fd5b6000819050919050565b610b7181610b5e565b8114610b7c57600080fd5b50565b600081359050610b8e81610b68565b92915050565b600060208284031215610baa57610ba9610b54565b5b6000610bb884828501610b7f565b91505092915050565b6000819050919050565b610bd481610bc1565b82525050565b60008115159050919050565b610bef81610bda565b82525050565b6000606082019050610c0a6000830186610bcb565b610c176020830185610bcb565b610c246040830184610be6565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110610c6c57610c6b610c2c565b5b50565b6000819050610c7d82610c5b565b919050565b6000610c8d82610c6f565b9050919050565b610c9d81610c82565b82525050565b6000602082019050610cb86000830184610c94565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ce982610cbe565b9050919050565b610cf981610cde565b8114610d0457600080fd5b50565b600081359050610d1681610cf0565b92915050565b610d2581610bc1565b8114610d3057600080fd5b50565b600081359050610d4281610d1c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d6d57610d6c610d48565b5b8235905067ffffffffffffffff811115610d8a57610d89610d4d565b5b602083019150836001820283011115610da657610da5610d52565b5b9250929050565b60008083601f840112610dc357610dc2610d48565b5b8235905067ffffffffffffffff811115610de057610ddf610d4d565b5b602083019150836001820283011115610dfc57610dfb610d52565b5b9250929050565b60008060008060008060008060a0898b031215610e2357610e22610b54565b5b6000610e318b828c01610d07565b9850506020610e428b828c01610d33565b975050604089013567ffffffffffffffff811115610e6357610e62610b59565b5b610e6f8b828c01610d57565b9650965050606089013567ffffffffffffffff811115610e9257610e91610b59565b5b610e9e8b828c01610dad565b9450945050608089013567ffffffffffffffff811115610ec157610ec0610b59565b5b610ecd8b828c01610d57565b92509250509295985092959890939650565b610ee881610b5e565b82525050565b6000602082019050610f036000830184610edf565b92915050565b6000602082019050610f1e6000830184610bcb565b92915050565b600080600080600080600060a0888a031215610f4357610f42610b54565b5b6000610f518a828b01610d07565b9750506020610f628a828b01610d33565b965050604088013567ffffffffffffffff811115610f8357610f82610b59565b5b610f8f8a828b01610d57565b9550955050606088013567ffffffffffffffff811115610fb257610fb1610b59565b5b610fbe8a828b01610dad565b93509350506080610fd18a828b01610b7f565b91505092959891949750929550565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101a578082015181840152602081019050610fff565b60008484015250505050565b6000601f19601f8301169050919050565b600061104282610fe0565b61104c8185610feb565b935061105c818560208601610ffc565b61106581611026565b840191505092915050565b6000602082019050818103600083015261108a8184611037565b905092915050565b600060ff82169050919050565b6110a881611092565b81146110b357600080fd5b50565b6000813590506110c58161109f565b92915050565b600080604083850312156110e2576110e1610b54565b5b60006110f085828601610b7f565b9250506020611101858286016110b6565b9150509250929050565b60006060820190506111206000830186610bcb565b61112d6020830185610bcb565b61113a6040830184610bcb565b949350505050565b6000819050919050565b600061116761116261115d84610cbe565b611142565b610cbe565b9050919050565b60006111798261114c565b9050919050565b600061118b8261116e565b9050919050565b61119b81611180565b82525050565b60006020820190506111b66000830184611192565b92915050565b600082825260208201905092915050565b7f70726f706f73616c20646f65736e742065786973740000000000000000000000600082015250565b60006112036015836111bc565b915061120e826111cd565b602082019050919050565b60006020820190508181036000830152611232816111f6565b9050919050565b61124281610cde565b82525050565b600060208201905061125d6000830184611239565b92915050565b60008151905061127281610d1c565b92915050565b60006020828403121561128e5761128d610b54565b5b600061129c84828501611263565b91505092915050565b7f6e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b60006112db6011836111bc565b91506112e6826112a5565b602082019050919050565b6000602082019050818103600083015261130a816112ce565b9050919050565b600081905092915050565b82818337600083830152505050565b60006113378385611311565b935061134483858461131c565b82840190509392505050565b600061135d82848661132b565b91508190509392505050565b7f70726f706f73616c20616c726561647920657869737473000000000000000000600082015250565b600061139f6017836111bc565b91506113aa82611369565b602082019050919050565b600060208201905081810360008301526113ce81611392565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061140f82610bc1565b915061141a83610bc1565b9250828201905080821115611432576114316113d5565b5b92915050565b7f696e76616c696420737461746500000000000000000000000000000000000000600082015250565b600061146e600d836111bc565b915061147982611438565b602082019050919050565b6000602082019050818103600083015261149d81611461565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b6114eb6114e6826114a4565b6114d0565b82525050565b60006114fd82866114da565b60048201915061150e82848661132b565b9150819050949350505050565b600061152682610fe0565b6115308185611311565b9350611540818560208601610ffc565b80840191505092915050565b6000611558828461151b565b915081905092915050565b7f7478206661696c65640000000000000000000000000000000000000000000000600082015250565b60006115996009836111bc565b91506115a482611563565b602082019050919050565b600060208201905081810360008301526115c88161158c565b9050919050565b7f616c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000611605600d836111bc565b9150611610826115cf565b602082019050919050565b60006020820190508181036000830152611634816115f8565b9050919050565b600061164783856111bc565b935061165483858461131c565b61165d83611026565b840190509392505050565b60006116748385610feb565b935061168183858461131c565b61168a83611026565b840190509392505050565b600060a0820190506116aa600083018a611239565b6116b76020830189610bcb565b81810360408301526116ca81878961163b565b905081810360608301526116df818587611668565b90506116ee6080830184610edf565b9897505050505050505056fea2646970667358221220213e77841b690be3ce1ac4c3bf6161eccc64912b81fa591ae49f02b497269ff064736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 422,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposals",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(Proposal)411_storage)"
      },
      {
        "astId": 427,
        "contract": "contracts/Governance.sol:Governance",
        "label": "proposalVotes",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(ProposalVote)404_storage)"
      },
      {
        "astId": 430,
        "contract": "contracts/Governance.sol:Governance",
        "label": "token",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)903"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)903": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(Proposal)411_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Governance.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)411_storage"
      },
      "t_mapping(t_bytes32,t_struct(ProposalVote)404_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Governance.ProposalVote)",
        "numberOfBytes": "32",
        "value": "t_struct(ProposalVote)404_storage"
      },
      "t_struct(Proposal)411_storage": {
        "encoding": "inplace",
        "label": "struct Governance.Proposal",
        "members": [
          {
            "astId": 406,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votingStarts",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 408,
            "contract": "contracts/Governance.sol:Governance",
            "label": "votingEnds",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 410,
            "contract": "contracts/Governance.sol:Governance",
            "label": "executed",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(ProposalVote)404_storage": {
        "encoding": "inplace",
        "label": "struct Governance.ProposalVote",
        "members": [
          {
            "astId": 395,
            "contract": "contracts/Governance.sol:Governance",
            "label": "againstVotes",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 397,
            "contract": "contracts/Governance.sol:Governance",
            "label": "forVotes",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 399,
            "contract": "contracts/Governance.sol:Governance",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 403,
            "contract": "contracts/Governance.sol:Governance",
            "label": "hasVoted",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}